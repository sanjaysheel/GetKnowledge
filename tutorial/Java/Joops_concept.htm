<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
  
  </head>
<body>
<div style="border:1px solid pink;padding:3px;font-size:20px;background-color:gray;">
<h1 style="color:black">Java Oops Concepts</h1></div>
<br>
<p style="font-size:20px;">Object means a real-world entity such as a pen, chair, table, computer, watch, etc. Object-Oriented Programming is a methodology or paradigm to design a program using classes and objects. It simplifies software development and maintenance by providing some concepts:</p>
<ul>
<li style="font-size:20px;">Object</li>
<li style="font-size:20px;">Class</li>
<li style="font-size:20px;">Inheritance</li>
<li style="font-size:20px;">Polymorphism</li>
<li style="font-size:20px;">Abstraction</li>
<li style="font-size:20px;">Encapsulation</li>
</ul>
<br>
<div style="border:1px solid pink;padding:1px;font-size:20px;background-color:gray;">
<h3 style="color:black">Object</h3></div><br>
<ul>
<li style="font-size:20px;">Object is a real-world entity,For example pen,table,keyword,bike and etc.</li>
<li style="font-size:20px;">Object is a blue print of class.</li>
<li style="font-size:20px;">Object is State Behavior entity.</li>
<li style="font-size:20px;">An Object can be defined as an instance of a class.</li>
</ul>
<br>
<div style="border:1px solid pink;padding:1px;font-size:20px;background-color:gray;">
<h3 style="color:black">Class</h3></div>
<br>
<ul>
<li style="font-size:20px;">Class is collection of object.</li>
<li style="font-size:20px;">A class can also be defined as a blueprint from which you can create an individual object.</li>
<li style="font-size:20px;">Class doesn't consume any space.</li>
</ul>
<br>
<div style="border:1px solid pink;padding:1px;font-size:20px;background-color:gray;">
<h3 style="color:black">Inheritance</h3></div>
<br>
<ul>
<li style="font-size:20px;">When one object acquires all the properties and behaviors of a parent object, it is known as inheritance.</li>
<li style="font-size:20px;">It is used to achieve runtime polymorphism.</li>
</ul>
<br>
<div style="border:1px solid pink;padding:1px;font-size:20px;background-color:gray;">
<h3 style="color:black">Polymorphism</h3></div>
<br>
<ul>
<li style="font-size:20px;">If one task is performed in different ways, it is known as polymorphism.</li>
<li style="font-size:20px;">In Java, we use method overloading and method overriding to achieve polymorphism.</li>
</ul>
<br>
<div style="border:1px solid pink;padding:1px;font-size:20px;background-color:gray;">
<h3 style="color:black">Abstraction</h3></div>
<br>
<ul>
<li style="font-size:20px;">Hiding of unwanted data and show only required data is known as a abstraction.</li>
<li style="font-size:20px;">In Java, we use abstract class and interface to achieve abstraction.</li>
</ul>
<br>
<div style="border:1px solid pink;padding:1px;font-size:20px;background-color:gray;">
<h3 style="color:black">Encapsulation</h3></div>
<br>
<ul>
<li style="font-size:20px;">Binding (or wrapping) code and data together into a single unit are known as encapsulation.</li>
<li style="font-size:20px;">Java bean is the fully encapsulated class because all the data members are private here.</li>
</ul>
<br>


<div class="container">
  		<ul class="pager">
    <li class="previous"><a href="#">Previous</a></li>
    <li class="next"><a href="#">Next</a></li>
  </ul>
</div>
</body>
</html>
