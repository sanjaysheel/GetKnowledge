<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
  
  </head>
<body>
<div style="border:1px solid pink;padding:3px;font-size:20px;background-color:gray;">
<h1 style="color:black">Java Dynamic Binding</h1>
</div><br>
<p style="font-size:20px;">Connecting a method call to the method body is known as binding.</p>
<p style="font-size:20px;">There are two types of binding</p>
<ul>
<li style="font-size:20px;">Static Binding</li>
<li style="font-size:20px;">Dynamic Binding</li>
</ul>
<br>
<div style="border:1px solid pink; padding:1px; font-size:20px;background-color:gray;">
<h3 style="color:black">Static Binding</h3></div>
<br>
<p style="font-size:20px;">When type of the object is determined at compiled time(by the compiler), it is known as static binding.</p>
<p style="font-size:20px;">If there is any private, final or static method in a class, there is static binding.</p>
<br>
<div style="padding-left: 3%; padding-right:640px;">
<pre>
class Dog
{  
 private void eat()
 {
 System.out.println("dog is eating...");
 }  
  
 public static void main(String args[])
 {  
  Dog d1=new Dog();  
  d1.eat();  
 }  
}
</pre>
</div>
<br>
<div style="border:1px solid pink; padding:1px; font-size:20px;background-color:gray;">
<h3 style="color:black">Dynamic Binding</h3></div>
<br>
<p style="font-size:20px;">When type of the object is determined at run-time, it is known as dynamic binding.</p>
<br>
<div style="padding-left: 3%; padding-right:640px;">
<pre>
class Animal
{  
 void eat()
 {
 System.out.println("animal is eating...");
 }  
}  
  
class Dog extends Animal
{  
 void eat()
 {
 System.out.println("dog is eating...");
 }  
  
 public static void main(String args[])
 {  
  Animal a=new Dog();  
  a.eat();  
 }  
}
</pre>
</div>
<br>
<div class="container">
  		<ul class="pager">
    <li class="previous"><a href="#">Previous</a></li>
    <li class="next"><a href="#">Next</a></li>
  </ul>
</div>
</body>
</html>
